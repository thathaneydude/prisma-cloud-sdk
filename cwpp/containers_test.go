package cwpp

import (
	"fmt"
	"net/http"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/thathaneydude/prisma-cloud-sdk/internal/client"
)

func TestCwppClient_ListContainers(t *testing.T) {

	//fileContent, err := ioutil.ReadFile("../test_files/list_containers_response.json")

	teardown := setup()
	defer teardown()
	c, err := NewCwppClient(&ClientOptions{
		ConsoleUrl: server.URL,
		SslVerify:  false,
		ApiVersion: apiVersion,
		Schema:     "http",
		MaxRetries: 3,
	})

	assert.Nil(t, err)
	fullUri := fmt.Sprintf("/api/v%v%v", apiVersion, containersEndpoint)
	mux.HandleFunc(fullUri, func(w http.ResponseWriter, r *http.Request) {
		w.Header().Set(client.ContentTypeHeader, client.ApplicationJSON)
		w.WriteHeader(http.StatusOK)
		//w.Write(fileContent)
		w.Write([]byte(`[{"_id":"63cd10f066d4b4d6adb657a1ebe8f5478a88045549b607923c18a08e984a547b","hostname":"gke-nikunj-test-home-depot-235b3b15-j5zg","scanTime":"2022-07-13T00:25:07.732Z","info":{"name":"k8s_gce-pd-driver_pdcsi-node-klcrd_kube-system_a04f0156-558b-41a6-9d7e-8ebae60ada6f_0","profileID":"sha256:ce5eb99df35366dfbd9b072128f2960a381fb74c22908db67df479a8fa325946_kube-system_nikunj-test","infra":false,"id":"63cd10f066d4b4d6adb657a1ebe8f5478a88045549b607923c18a08e984a547b","imageID":"sha256:ce5eb99df35366dfbd9b072128f2960a381fb74c22908db67df479a8fa325946","image":"gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.6-gke.0","imageName":"gke.gcr.io/gcp-compute-persistent-disk-csi-driver:v1.3.6-gke.0","app":"gce-pd-csi-driver","namespace":"kube-system","cluster":"nikunj-test","networkSettings":{},"complianceIssues":[{"text":"","id":59,"severity":"critical","cvss":0,"status":"","cve":"","cause":"","description":"The networking mode on a container when set to --net=host , skips placing the container\ninside separate network stack. In essence, this choice tells Docker to not containerize the\ncontainer's networking. This would network-wise mean that the container lives \"outside\"\nin the main Docker host and has full access to its network interfaces","title":"(CIS_Docker_v1.3.1 - 5.9) Do not share the host's network namespace","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["PCI","HIPAA","NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":520,"severity":"critical","cvss":0,"status":"","cve":"","cause":"","description":"UTS namespaces provide isolation of two system identifiers: the hostname and the NIS\ndomain name. It is used for setting the hostname and the domain that is visible to running\nprocesses in that namespace. Processes running within containers do not typically require\nto know hostname and domain name. Hence, the namespace should not be shared with the\nhost","title":"(CIS_Docker_v1.3.1 - 5.20) Do not share the host's UTS namespace","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":521,"severity":"critical","cvss":0,"status":"","cve":"","cause":"","description":"Seccomp filtering provides a means for a process to specify a filter for incoming system\ncalls. The default Docker seccomp profile works on whitelist basis and allows 311 system\ncalls blocking all others. It should not be disabled unless it hinders your container\napplication usage","title":"(CIS_Docker_v1.3.1 - 5.21) Do not disable default seccomp profile","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":525,"severity":"high","cvss":0,"status":"","cve":"","cause":"","description":"A process can set the no_new_priv bit in the kernel. It persists across fork, clone and\nexecve. The no_new_priv bit ensures that the process or its children processes do not gain\nany additional privileges via suid or sgid bits. This way a lot of dangerous operations\nbecome a lot less dangerous because there is no possibility of subverting privileged\nbinaries","title":"(CIS_Docker_v1.3.1 - 5.25) Restrict container from acquiring additional privileges","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":528,"severity":"high","cvss":0,"status":"","cve":"","cause":"","description":"Attackers could launch a fork bomb with a single command inside the container. This fork\nbomb can crash the entire system and requires a restart of the host to make the system\nfunctional again. PIDs cgroup --pids-limit will prevent this kind of attacks by restricting\nthe number of forks that can happen inside a container at a given time","title":"(CIS_Docker_v1.3.1 - 5.28) Use PIDs cgroup limit","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":55,"severity":"critical","cvss":0,"status":"","cve":"","cause":"Top level /dev folder is mounted to /dev","description":"Sensitive host system directories should not be allowed to be mounted as\ncontainer volumes especially in read-write mode","title":"(CIS_Docker_v1.3.1 - 5.5) Do not mount sensitive host system directories on containers","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":55,"severity":"critical","cvss":0,"status":"","cve":"","cause":"Top level /sys folder is mounted to /sys","description":"Sensitive host system directories should not be allowed to be mounted as\ncontainer volumes especially in read-write mode","title":"(CIS_Docker_v1.3.1 - 5.5) Do not mount sensitive host system directories on containers","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":519,"severity":"critical","cvss":0,"status":"","cve":"","cause":"Volume /var/lib/kubelet:/var/lib/kubelet is shared","description":"Mount propagation mode allows mounting volumes in shared, slave or private mode on a\ncontainer. Do not use shared mount propagation mode until needed","title":"(CIS_Docker_v1.3.1 - 5.19) Do not set mount propagation mode to shared","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":599,"severity":"high","cvss":0,"status":"","cve":"","cause":"","description":"","title":"Container is running as root","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["PCI","NIST SP 800-190","GDPR"],"twistlock":true,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":54,"severity":"critical","cvss":0,"status":"","cve":"","cause":"","description":"Using the --privileged flag gives all Linux Kernel Capabilities to the container thus\noverwriting the --cap-add and --cap-drop flags. Ensure that it is not used","title":"(CIS_Docker_v1.3.1 - 5.4) Do not use privileged containers","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""},{"text":"","id":51,"severity":"high","cvss":0,"status":"","cve":"","cause":"","description":"AppArmor is an effective and easy-to-use Linux application security system. It is available\non quite a few Linux distributions by default such as Debian and Ubuntu. Make sure Docker daemon is configured with support of AppArmor","title":"(CIS_Docker_v1.3.1 - 5.1) Verify AppArmor profile, if applicable","vecStr":"","exploit":"","riskFactors":null,"link":"","type":"container","packageName":"","packageVersion":"","layerTime":0,"templates":["NIST SP 800-190","GDPR","DISA STIG"],"twistlock":false,"cri":false,"published":0,"fixDate":0,"discovered":"0001-01-01T00:00:00Z","functionLayer":""}],"allCompliance":{},"complianceIssuesCount":11,"complianceRiskScore":7040000,"complianceDistribution":{"critical":7,"high":4,"medium":0,"low":0,"total":11},"processes":[{"name":"/gce-pd-csi-driver --v=5 --endpoint=unix:/csi/csi.sock --run-controller-service=false"}],"network":{"ports":[]},"labels":["k8s-app:gcp-compute-persistent-disk-csi-driver","LICENSE_CATEGORY:Notice","LICENSE_SCAN_TAG:gcp-compute-persistent-disk-csi-driver/ref_v1.3.6_9b5071003641bf61c1625aba41f6de2055a65936","annotation.io.kubernetes.container.terminationMessagePath:/dev/termination-log","io.kubernetes.container.logpath:/var/log/pods/kube-system_pdcsi-node-klcrd_a04f0156-558b-41a6-9d7e-8ebae60ada6f/gce-pd-driver/0.log","io.kubernetes.pod.uid:a04f0156-558b-41a6-9d7e-8ebae60ada6f","io.kubernetes.sandbox.id:da34d208513343ae990ff4c65f329d0beca941a476011f12f064ec4c91645c64","pod-template-generation:3","annotation.io.kubernetes.container.hash:54d0631d","annotation.io.kubernetes.container.restartCount:0","annotation.io.kubernetes.container.terminationMessagePolicy:File","io.kubernetes.container.name:gce-pd-driver","io.kubernetes.pod.namespace:kube-system","annotation.components.gke.io/component-version:0.10.8","INCLUDES_SOURCE:/source.tar.gz","LICENSE:Apache License 2.0","io.kubernetes.pod.name:pdcsi-node-klcrd","controller-revision-hash:56fd47777c","INCLUDES_NOTICES:/THIRD_PARTY_NOTICES","annotation.io.kubernetes.pod.terminationGracePeriod:30","io.kubernetes.docker.type:container","annotation.components.gke.io/component-name:pdcsi"],"installedProducts":{"docker":"20.10.3"},"cloudMetadata":{"resourceID":"3622109390333342719","provider":"gcp","name":"gke-nikunj-test-home-depot-235b3b15-j5zg","region":"us-central1-c","accountID":"focusedservices-nam","image":"gke-12112-gke1700-cos-89-16108-659-8-v220513-pre"},"startTime":"2022-07-03T08:03:40.488Z"},"collections":["All","Resources collection 1","jroberts-collection","1","All Funtions","JTB Dev Images","AllCollection","david-test-compute-list - Access Group (RBAC)","Default All Resources","eferreira-rl - Access Group (RBAC)","BMO Test Collection","eferreira-all-rl - Access Group (RBAC)","Test Resource List0 - Access Group (RBAC)","ba-ami-scan","bb-k8-collection","bb-azlabs-collection","bb-gcp-k8-hosts-collection","Jety_Runtime_Collection","aljubstest","testimagepolicy","LaurenMegrelis","dima-aws-cluster - Access Group (RBAC)","hello","adenike-collections","testsdffdsa","pj-aws-ami","fasfa","stest","JL_collect","my-collection","ba-fargate","jm lambda","ACME-Inc","gklimeck-Host","gklimeck-container","nikunj-gke-cluster","Pradeep CI Image Scan","aaaa","Testsai","All Fahd","test-sva","fargate","pc-sa-ami","stan-test","test-runtime-policy","zwaqar-RL - Access Group (RBAC)","gke","xxx1234-rl - Access Group (RBAC)","TJK Compute Resource List - Access Group (RBAC)","RL-Test-002-Pradeep - Access Group (RBAC)","GordonBM - Access Group (RBAC)","gklimeck-defender","ba-ecr-scan","Allrepos","kk-lambda-collection","dweaver","delete","All Clusters","abej vm image","Rakesh-Collection","Byas Resource list - Access Group (RBAC)","RyanMoore-test-resource-list-iac - Access Group (RBAC)","Nikunj_test_gke - Access Group (RBAC)","cfarquhar_all_lambda","PradeepServerlessCollection","sdfsfdsfsf","sdfs","PhimmTag","jdentutestingcollection","Demo Resource List - Access Group (RBAC)","General","Mikes collection","YashResourceList - Access Group (RBAC)","Pradeep_All_Compute_Resources - Access Group (RBAC)","nathan-gdpr-compliance-rule-filter","test marcos - Access Group (RBAC)","Test21","dimar","Infrastructure-Components","test-nomura","ank test","Nikunj_TEST_JFROG - Access Group (RBAC)","Kube System Namespace","Zyu-waas","AMB-EKS","gklimeck_Azure_Function_Collection","gklimeck_docker_auth","knishida-kube-system-collection","AMB-test - Access Group (RBAC)","YashTest","Not DVWA","nbs2 - Access Group (RBAC)","Armand-RL - Access Group (RBAC)"],"firewallProtection":{"enabled":false,"supported":false,"outOfBandMode":""}}]`))
	})

	listResponse, err := c.ListContainers(ContainerQuery{
		Offset: "0",
		Limit:  "50",
	})

	assert.Nil(t, err)
	assert.Equal(t, 1, len(listResponse))
	assert.Equal(t, "63cd10f066d4b4d6adb657a1ebe8f5478a88045549b607923c18a08e984a547b", listResponse[0].ID)

}
